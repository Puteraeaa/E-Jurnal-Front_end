{"version":3,"file":"static/js/186.c5cff552.chunk.js","mappings":"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","sources":["components/Typography/Subtitle.js","components/Cards/TitleCard.js","features/leads/DataGuru/DetailGuru.js","features/leads/DataGuru/DataGuru.js","pages/protected/Data-User/Data-Guru.js","../node_modules/@heroicons/react/24/outline/esm/EyeIcon.js","../node_modules/@heroicons/react/24/outline/esm/PencilIcon.js","../node_modules/@heroicons/react/24/outline/esm/TrashIcon.js"],"sourcesContent":[" function Subtitle({styleClass, children}){\n    return(\n        <div className={`text-xl font-semibold ${styleClass}`}>{children}</div>\n    )\n}\n\nexport default Subtitle","import Subtitle from \"../Typography/Subtitle\"\n\n  \n  function TitleCard({title, children, topMargin, TopSideButtons}){\n      return(\n          <div className={\"card w-full p-6 bg-base-100 shadow-xl \" + (topMargin || \"mt-6\")}>\n\n            {/* Title for Card */}\n              <Subtitle styleClass={TopSideButtons ? \"inline-block\" : \"\"}>\n                {title}\n\n                {/* Top side button, show only if present */}\n                {\n                    TopSideButtons && <div className=\"inline-block float-right\">{TopSideButtons}</div>\n                }\n              </Subtitle>\n              \n              <div className=\"divider mt-2\"></div>\n          \n              {/** Card Body */}\n              <div className='h-full w-full pb-6 bg-base-100'>\n                  {children}\n              </div>\n          </div>\n          \n      )\n  }\n  \n  \n  export default TitleCard","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { closeModal } from '../../common/modalSlice';\n\nconst LeadDetailsModal = ({ lead, show, onClose }) => {\n    const dispatch = useDispatch();\n\n    const handleClose = () => {\n        dispatch(closeModal());\n        onClose();  \n    };\n\n    return (\n        <div className={`modal modal-open overflow-y-auto`}>\n            <div className=\"modal-box w-11/12 max-w-5xl h-auto p-6 relative bg-white shadow-lg rounded-lg\">\n                <div className=\"absolute top-4 right-4 z-50\">\n                    <button\n                        className=\"text-gray-500 hover:text-gray-700\"\n                        onClick={handleClose}\n                    >\n                        <svg\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                            className=\"h-6 w-6\"\n                            fill=\"none\"\n                            viewBox=\"0 0 24 24\"\n                            stroke=\"currentColor\"\n                        >\n                            <path\n                                strokeLinecap=\"round\"\n                                strokeLinejoin=\"round\"\n                                strokeWidth=\"2\"\n                                d=\"M6 18L18 6M6 6l12 12\"\n                            />\n                        </svg>\n                    </button>\n                </div>\n\n                <div className=\"bg-white p-4 mb-4 shadow rounded\">\n                    <h3 className=\"text-lg font-semibold mb-6\">Info Dasar</h3>\n                    <table className=\"w-full\">\n                        <tbody className=\"text-sm font-medium text-gray-700\">\n                            <tr className=\"border-b\">\n                                <td className=\"py-2 px-4 font-medium\">Nama</td>\n                                <td className=\"py-2 px-4\">{lead.name}</td>\n                            </tr>\n                            <tr className=\"border-b\">\n                                <td className=\"py-2 px-4 font-medium\">Nomor Telepon</td>\n                                <td className=\"py-2 px-4\">{lead.no_hp}</td>\n                            </tr>\n                            <tr className=\"border-b\">\n                                <td className=\"py-2 px-4 font-medium\">Jurusan</td>\n                                <td className=\"py-2 px-4\">{lead.departemen_id }</td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n\n            \n                <div className=\"modal-action flex justify-center mt-6\">\n                    <button\n                        className=\"btn btn-sm sm:btn-md border-black w-full sm:w-auto bg-blue-500 hover:bg-blue-600 text-white\"\n                        onClick={handleClose}\n                    >\n                        Close\n                    </button>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default LeadDetailsModal;\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport TitleCard from \"../../../components/Cards/TitleCard\";\nimport { openModal } from \"../../common/modalSlice\";\nimport TrashIcon from '@heroicons/react/24/outline/TrashIcon';\nimport PencilIcon from '@heroicons/react/24/outline/PencilIcon';\nimport EyeIcon from \"@heroicons/react/24/outline/EyeIcon\";\nimport LeadDetailsModal from \"./DetailGuru\";\nimport Api from \"../../../api\";\nimport Cookies from \"js-cookie\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport swal from \"sweetalert2\";\nimport template from '../../../assets/Template import-guru.xlsx';  \n\nconst DataGuru = () => {\n    const dispatch = useDispatch();\n    const [searchTerm, setSearchTerm] = useState(\"\");\n    const [currentPage, setCurrentPage] = useState(1);\n    const [pagination, setPagination] = useState({\n        currentPage: 1,\n        perPage: 5, // Ensure itemsPerPage is consistent\n        total: 0\n    });\n    const [selectedLead, setSelectedLead] = useState(null);\n    const [isDetailModalOpen, setIsDetailModalOpen] = useState(false);\n    const [guru, setGuru] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n    const [selectedFile, setSelectedFile] = useState(null);\n    const token = Cookies.get(\"token\");\n\n    useEffect(() => {\n        fetchData(); // Fetch data when the component mounts\n    }, [token, currentPage]);\n\n    const fetchData = async (page = currentPage) => {\n        setIsLoading(true);\n        try {\n            const response = await Api.get(`admin/teacher?page=${page}`, {\n                headers: { Authorization: `Bearer ${token}` }\n            });\n            setGuru(response.data.data.data || []);\n    \n\n\n\n            setPagination({\n                currentPage: response.data.data.current_page,\n                perPage: response.data.data.per_page,\n                total: response.data.data.total\n            });\n        } catch (error) {\n            console.error(\"Error fetching data:\", error);\n        } finally {\n            setIsLoading(false);\n        }\n    };\n  \n\n    \n    const totalPages = Math.ceil(pagination.total / pagination.perPage);\n\n    const handleClick = (pageNumber) => {\n        setCurrentPage(pageNumber);\n    };\n\n    const renderPagination = () => {\n        const pages = [];\n        for (let i = 1; i <= totalPages; i++) {\n            pages.push(\n                <button\n                    key={i}\n                    className={`btn btn-sm ${i === currentPage ? \"btn-active\" : \"\"}`}\n                    onClick={() => handleClick(i)}\n                >\n                    {i}\n                </button>\n            );\n        }\n        return pages;\n    };\n\n    const filteredLeads = guru.filter(lead =>\n        lead.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        lead.no_hp.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        (lead.departements && lead.departements.name.toLowerCase().includes(searchTerm.toLowerCase()))\n    );\n    \n\n\n    const currentItems = filteredLeads.slice(\n        (currentPage - 1) * pagination.perPage,\n        currentPage * pagination.perPage\n    );\n\n  \n\n    const handleFileChange = (e) => {\n        setSelectedFile(e.target.files[0]);\n    };\n\n    const handleFileUpload = async () => {\n        if (!selectedFile) {\n            toast.error(\"No file selected.\", {\n                position: \"top-right\",\n                duration: 4000,\n            });\n            return;\n        }\n\n        const formData = new FormData();\n        formData.append(\"file\", selectedFile);\n\n        setIsLoading(true);\n\n        try {\n            await Api.post(\"/admin/import\", formData, {\n                headers: {\n                    Authorization: `Bearer ${token}`,\n                    'Content-Type': 'multipart/form-data'\n                },\n            });\n            toast.success(\"File uploaded successfully!\", {\n                position: \"top-right\",\n                duration: 4000,\n            });\n            fetchData(); // Refresh data after file upload\n        } catch (error) {\n            console.error(\"Error uploading file:\", error);\n            toast.error(\"Failed to upload file.\", {\n                position: \"top-right\",\n                duration: 4000,\n            });\n        } finally {\n            setIsLoading(false);\n            setSelectedFile(null);\n        }\n    };\n\n    const downloadTemplate = () => {\n        const link = document.createElement('a');\n        link.href = template;\n        link.setAttribute('download', 'Template import-guru.xlsx');\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n    };\n\n    const handleDelete = async (leadId) => {\n        try {\n            const { isConfirmed } = await swal.fire({\n                title: \"Yakin?\",\n                text: \"Apakah Anda yakin ingin menghapus data ini?\",\n                icon: \"warning\",\n                showCancelButton: true,\n                confirmButtonColor: \"#3085d6\",\n                cancelButtonColor: \"#d33\",\n                confirmButtonText: \"Hapus!\",\n            });\n\n            if (isConfirmed) {\n                const response = await Api.delete(`admin/users/${leadId}`, {\n                    headers: {\n                        Authorization: `Bearer ${token}`,\n                    }\n                });\n                toast.success(response.data.message, {\n                    position: \"top-right\",\n                    duration: 4000,\n                });\n                fetchData(currentPage);  // Re-fetch data after deletion\n            }\n        } catch (error) {\n            console.error(\"Error deleting lead:\", error);\n            toast.error(\"Failed to delete lead.\", {\n                position: \"top-right\",\n                duration: 4000,\n            });\n        }\n    };\n\n    return (\n        <>\n            <ToastContainer />\n            <TitleCard \n                title=\"Data Guru\" \n                topMargin=\"mt-2\" \n                TopSideButtons={\n                    <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between gap-5\">\n                        <input\n                            type=\"text\"\n                            className=\"input input-bordered input-sm mb-4 sm:mb-0 sm:mr-4 w-full sm:w-auto\"\n                            placeholder=\"Search\"\n                            value={searchTerm}\n                            onChange={(e) => setSearchTerm(e.target.value)}\n                        />\n                        <Link to=\"/app/data/guru/tambah\">\n                            <button className=\"btn btn-sm normal-case btn-primary w-full sm:w-auto\">\n                                Add New\n                            </button>\n                        </Link>\n                        <button className=\"btn btn-sm normal-case btn-primary w-full sm:w-auto\" onClick={() => document.getElementById('my_modal_5').showModal()}>\n                            Import Excel\n                        </button>\n                    </div>\n                }\n            >\n                <div className=\"overflow-x-auto w-full\">\n                    <table className=\"table w-full text-center\">\n                        <thead>\n                            <tr>\n                                <th>Nama Guru</th>\n                                <th>Nomer Guru</th>\n                                <th className=\"w-1/4 text-center\">Pelajaran</th>\n                                <th></th>\n                            </tr>\n                        </thead>\n                        <tbody className=\"text-center\">\n                            {isLoading ? (\n                                <tr>\n                                    <td colSpan=\"4\" className=\"text-center\">Loading...</td>\n                                </tr>\n                            ) : (\n                                filteredLeads.map((lead) => (\n                                    <tr key={lead.id}>\n                                        <td className=\"whitespace-normal break-words\">{lead.name}</td>\n                                        <td className=\"whitespace-normal break-words\">{lead.no_hp}</td>\n                                        <td className=\"whitespace-normal break-words max-w-xs\">\n                                            {lead.departements ? lead.departements.name : \"\"}\n                                        </td>\n                                        <td className=\"flex justify-center space-x-2 sm:space-x-4\">\n                                            <button className=\"btn btn-sm btn-square btn-warning\" onClick={() => { setSelectedLead(lead); setIsDetailModalOpen(true); }}>\n                                                <EyeIcon className=\"h-4 w-4\" />\n                                            </button>\n                                            <Link to={`/app/data/guru/edit/${lead.user_id}`}>\n                                                <button className=\"btn btn-sm btn-square btn-primary\">\n                                                    <PencilIcon className=\"h-4 w-4\" />\n                                                </button>\n                                            </Link>\n                                            <button className=\"btn btn-sm btn-square btn-error\" onClick={() => handleDelete(lead.user_id)}>\n                                                <TrashIcon className=\"h-4 w-4\" />\n                                            </button>\n                                        </td>\n                                    </tr>\n                                ) ) \n                            ) }\n                        </tbody>\n                    </table>\n                </div>\n                <div className=\"flex justify-center mt-4 gap-2\">\n                    {renderPagination()}\n                </div>\n            </TitleCard>\n\n            {isDetailModalOpen && <LeadDetailsModal lead={selectedLead} onClose={() => setIsDetailModalOpen(false)} />}\n            \n            <dialog id=\"my_modal_5\" className=\"modal\">\n                <form method=\"dialog\" className=\"modal-box\">\n                    <h3 className=\"font-bold text-lg\">Upload Excel File</h3>\n                    <p className=\"py-4\">Pilih file Excel yang ingin diunggah:</p>\n                    <input type=\"file\" accept=\".xlsx\" onChange={handleFileChange} className=\"file-input file-input-bordered file-input-primary w-full max-w-xs\" />\n                    <div className=\"modal-action\">\n                        <button className=\"btn\">Close</button>\n                        <button className=\"btn btn-primary\" type=\"button\" onClick={handleFileUpload}>Upload</button>\n                    </div>\n                    <button className=\"btn btn-link mt-4\" type=\"button\" onClick={downloadTemplate}>Download Template</button>\n                </form>\n            </dialog>\n        </>\n    );\n};\n\nexport default DataGuru;\n","import { useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { setPageTitle } from '../../../features/common/headerSlice'\nimport Leads from '../../../features/leads/DataGuru/DataGuru'\n\nfunction InternalPage(){\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        dispatch(setPageTitle({ title : \"Data Guru\"}))\n      }, [])\n\n\n    return(\n        <Leads />\n    )\n}\n\nexport default InternalPage","import * as React from \"react\";\nfunction EyeIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M2.036 12.322a1.012 1.012 0 0 1 0-.639C3.423 7.51 7.36 4.5 12 4.5c4.638 0 8.573 3.007 9.963 7.178.07.207.07.431 0 .639C20.577 16.49 16.64 19.5 12 19.5c-4.638 0-8.573-3.007-9.963-7.178Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M15 12a3 3 0 1 1-6 0 3 3 0 0 1 6 0Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(EyeIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction PencilIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"m16.862 4.487 1.687-1.688a1.875 1.875 0 1 1 2.652 2.652L6.832 19.82a4.5 4.5 0 0 1-1.897 1.13l-2.685.8.8-2.685a4.5 4.5 0 0 1 1.13-1.897L16.863 4.487Zm0 0L19.5 7.125\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(PencilIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction TrashIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"m14.74 9-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 0 1-2.244 2.077H8.084a2.25 2.25 0 0 1-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 0 0-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 0 1 3.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 0 0-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 0 0-7.5 0\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(TrashIcon);\nexport default ForwardRef;"],"names":["_ref","styleClass","children","_jsx","className","title","topMargin","TopSideButtons","_jsxs","Subtitle","lead","show","onClose","dispatch","useDispatch","handleClose","closeModal","onClick","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","name","no_hp","departemen_id","DataGuru","searchTerm","setSearchTerm","useState","currentPage","setCurrentPage","pagination","setPagination","perPage","total","selectedLead","setSelectedLead","isDetailModalOpen","setIsDetailModalOpen","guru","setGuru","isLoading","setIsLoading","selectedFile","setSelectedFile","token","Cookies","get","useEffect","fetchData","async","page","arguments","length","undefined","response","Api","headers","Authorization","data","current_page","per_page","error","console","totalPages","Math","ceil","filteredLeads","filter","toLowerCase","includes","departements","slice","_Fragment","ToastContainer","TitleCard","type","placeholder","value","onChange","e","target","Link","to","document","getElementById","showModal","colSpan","map","EyeIcon","user_id","PencilIcon","isConfirmed","swal","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","delete","leadId","toast","success","message","position","duration","handleDelete","TrashIcon","id","renderPagination","pages","i","push","LeadDetailsModal","method","accept","files","formData","FormData","append","post","downloadTemplate","link","createElement","href","template","setAttribute","body","appendChild","click","removeChild","setPageTitle","Leads","svgRef","titleId","props","React","Object","assign","ref"],"sourceRoot":""}