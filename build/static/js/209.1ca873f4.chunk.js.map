{"version":3,"file":"static/js/209.1ca873f4.chunk.js","mappings":"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","sources":["components/Typography/Subtitle.js","components/Cards/TitleCard.js","features/leads/DataGuru/DetailGuru.js","features/leads/DataGuru/DataGuru.js","pages/protected/Data-User/Data-Guru.js","../node_modules/@heroicons/react/24/outline/PencilIcon.js","../node_modules/@heroicons/react/24/outline/TrashIcon.js"],"sourcesContent":[" function Subtitle({styleClass, children}){\n    return(\n        <div className={`text-xl font-semibold ${styleClass}`}>{children}</div>\n    )\n}\n\nexport default Subtitle","import Subtitle from \"../Typography/Subtitle\"\n\n  \n  function TitleCard({title, children, topMargin, TopSideButtons}){\n      return(\n          <div className={\"card w-full p-6 bg-base-100 shadow-xl \" + (topMargin || \"mt-6\")}>\n\n            {/* Title for Card */}\n              <Subtitle styleClass={TopSideButtons ? \"inline-block\" : \"\"}>\n                {title}\n\n                {/* Top side button, show only if present */}\n                {\n                    TopSideButtons && <div className=\"inline-block float-right\">{TopSideButtons}</div>\n                }\n              </Subtitle>\n              \n              <div className=\"divider mt-2\"></div>\n          \n              {/** Card Body */}\n              <div className='h-full w-full pb-6 bg-base-100'>\n                  {children}\n              </div>\n          </div>\n          \n      )\n  }\n  \n  \n  export default TitleCard","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { closeModal } from '../../common/modalSlice';\r\n\r\nconst LeadDetailsModal = ({ lead, onClose }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const handleClose = () => {\r\n        dispatch(closeModal());\r\n        onClose();  \r\n    };\r\n\r\n    return (\r\n        <div className=\"modal modal-open\">\r\n            <div className=\"modal-box w-11/12 max-w-5xl h-auto p-6 relative\"> \r\n                <h3 className=\"font-bold text-2xl sm:text-3xl text-center mb-6\">Detail Guru</h3> \r\n                <div className=\"py-4 text-lg gap-4\">\r\n                    <div className=\"mb-4\">\r\n                        <strong className=\"block sm:inline w-full sm:w-1/4\">Nama Guru<span className='sm:ml-20'>:</span></strong>\r\n                        <span className=\"block sm:inline w-full sm:w-3/4\">{lead.name}</span>\r\n                    </div>\r\n                    <div className=\"mb-4\">\r\n                        <strong className=\"block sm:inline w-full sm:w-1/4\">Email Guru<span className='sm:ml-20'>:</span></strong>\r\n                        <span className=\"block sm:inline w-full sm:w-3/4\">{lead.email}</span>\r\n                    </div>\r\n                    <div className=\"mb-4\">\r\n                        <strong className=\"block sm:inline w-full sm:w-1/4\">Alamat<span className='sm:ml-28'>:</span></strong>\r\n                        <span className=\"block sm:inline w-full sm:w-3/4\">{lead.alamat}</span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"modal-action flex justify-center mt-6\">\r\n                    <button className=\"btn btn-sm sm:btn-md border-black w-full sm:w-auto\" onClick={handleClose}>Close</button> \r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LeadDetailsModal;\r\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport TitleCard from \"../../../components/Cards/TitleCard\";\nimport { openModal } from \"../../common/modalSlice\";\nimport TrashIcon from '@heroicons/react/24/outline/TrashIcon';\nimport PencilIcon from '@heroicons/react/24/outline/PencilIcon';\nimport LeadDetailsModal from \"./DetailGuru\";\nimport Api from \"../../../api\";\nimport Cookies from \"js-cookie\";\n\nconst Leads = () => {\n    const dispatch = useDispatch();\n    const [searchTerm, setSearchTerm] = useState(\"\");\n    const [currentPage, setCurrentPage] = useState(1);\n    const [selectedLead, setSelectedLead] = useState(null);\n    const [isDetailModalOpen, setIsDetailModalOpen] = useState(false);\n    const [guru, setGuru] = useState([]);\n    const itemsPerPage = 8;\n    const token = Cookies.get(\"token\");\n\n    useEffect(() => {\n        Api.get(\"admin/teacher\", {\n            headers: { Authorization: `Bearer ${token}` }\n        })\n        .then(response => {\n            const data = response.data.data.data || []; // Ensure the data is an array\n            setGuru(Array.isArray(data) ? data : []);\n            console.log(\"Fetched data:\", response.data.data); // Check the structure of fetched data\n        })\n        .catch(error => console.error(\"Error fetching data:\", error));\n    }, [token]);\n\n    const filteredLeads = guru.filter(lead =>\n        lead.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        lead.no_hp.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        (lead.departements && lead.departements.name.toLowerCase().includes(searchTerm.toLowerCase()))\n    );\n\n    const currentItems = filteredLeads.slice(\n        (currentPage - 1) * itemsPerPage, \n        currentPage * itemsPerPage\n    );\n\n    return (\n        <>\n            <TitleCard \n                title=\"Data Guru\" \n                topMargin=\"mt-2\" \n                TopSideButtons={\n                    <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between\">\n                        <input\n                            type=\"text\"\n                            className=\"input input-bordered input-sm mb-4 sm:mb-0 sm:mr-4 w-full sm:w-auto\"\n                            placeholder=\"Search\"\n                            value={searchTerm}\n                            onChange={(e) => setSearchTerm(e.target.value)}\n                        />\n                        <Link to=\"/app/data/guru/tambah\">\n                            <button className=\"btn btn-sm normal-case btn-primary w-full sm:w-auto\">\n                                Add New\n                            </button>\n                        </Link>\n                    </div>\n                }\n            >\n                <div className=\"overflow-x-auto w-full\">\n                    <table className=\"table w-full text-center\">\n                        <thead>\n                            <tr>\n                                <th>Nama Guru</th>\n                                <th>Nomer Guru</th>\n                                <th className=\"w-1/4 text-center\">Pelajaran</th>\n                                <th></th>\n                            </tr>\n                        </thead>\n                        <tbody className=\"text-center\">\n                            {currentItems.map((lead) => (\n                                <tr key={lead.id}>\n                                    <td className=\"whitespace-normal break-words\">{lead.name}</td>\n                                    <td className=\"whitespace-normal break-words\">{lead.no_hp}</td>\n                                    <td className=\"whitespace-normal break-words max-w-xs\">\n                                        {lead.departements ? lead.departements.name : \"\"}\n                                    </td>\n                                    <td className=\"flex justify-center space-x-2 sm:space-x-4\">\n                                        <button className=\"btn btn-ghost btn-xs\" onClick={() => { setSelectedLead(lead); setIsDetailModalOpen(true); }}>\n                                            Selengkapnya\n                                        </button>\n                                        <Link to={`/app/data/guru/edit/${lead.id}`}>\n                                            <button className=\"btn btn-square btn-ghost btn-xs\">\n                                                <PencilIcon className=\"w-5\" />\n                                            </button>\n                                        </Link>\n                                        <button className=\"btn btn-square btn-ghost btn-xs\" onClick={() => dispatch(openModal({\n                                            title: \"Confirmation\",\n                                            bodyType: \"CONFIRMATION\",\n                                            extraObject: { message: `Are you sure you want to delete this lead?`, id: lead.id }\n                                        }))}>\n                                            <TrashIcon className=\"w-5\" />\n                                        </button>\n                                    </td>\n                                </tr>\n                            ))}\n                        </tbody>\n                    </table>\n                </div>\n                <div className=\"flex justify-center mt-4 gap-2\">\n                    {Array.from({ length: Math.ceil(filteredLeads.length / itemsPerPage) }).map((_, i) => (\n                        <button\n                            key={i}\n                            className={`btn btn-sm ${i + 1 === currentPage ? \"btn-active\" : \"\"}`}\n                            onClick={() => setCurrentPage(i + 1)}\n                        >\n                            {i + 1}\n                        </button>\n                    ))}\n                </div>\n            </TitleCard>\n            {isDetailModalOpen && <LeadDetailsModal lead={selectedLead} onClose={() => setIsDetailModalOpen(false)} />}\n        </>\n    );\n};\n\nexport default Leads;\n","import { useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { setPageTitle } from '../../../features/common/headerSlice'\nimport Leads from '../../../features/leads/DataGuru/DataGuru'\n\nfunction InternalPage(){\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        dispatch(setPageTitle({ title : \"Data Guru\"}))\n      }, [])\n\n\n    return(\n        <Leads />\n    )\n}\n\nexport default InternalPage","const React = require(\"react\");\n\nfunction PencilIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M16.862 4.487l1.687-1.688a1.875 1.875 0 112.652 2.652L6.832 19.82a4.5 4.5 0 01-1.897 1.13l-2.685.8.8-2.685a4.5 4.5 0 011.13-1.897L16.863 4.487zm0 0L19.5 7.125\"\n  }));\n}\n\nconst ForwardRef = React.forwardRef(PencilIcon);\nmodule.exports = ForwardRef;","const React = require(\"react\");\n\nfunction TrashIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M14.74 9l-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 01-2.244 2.077H8.084a2.25 2.25 0 01-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 00-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 013.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 00-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 00-7.5 0\"\n  }));\n}\n\nconst ForwardRef = React.forwardRef(TrashIcon);\nmodule.exports = ForwardRef;"],"names":["styleClass","children","className","title","topMargin","TopSideButtons","lead","onClose","dispatch","useDispatch","name","email","alamat","onClick","closeModal","useState","searchTerm","setSearchTerm","currentPage","setCurrentPage","selectedLead","setSelectedLead","isDetailModalOpen","setIsDetailModalOpen","guru","setGuru","token","Cookies","useEffect","Api","headers","Authorization","then","response","data","Array","isArray","console","log","catch","error","filteredLeads","filter","toLowerCase","includes","no_hp","departements","currentItems","slice","TitleCard","type","placeholder","value","onChange","e","target","to","map","id","openModal","bodyType","extraObject","message","from","length","Math","ceil","_","i","setPageTitle","React","require","ForwardRef","forwardRef","svgRef","titleId","props","createElement","Object","assign","xmlns","fill","viewBox","strokeWidth","stroke","ref","strokeLinecap","strokeLinejoin","d","module","exports"],"sourceRoot":""}