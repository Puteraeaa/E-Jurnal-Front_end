{"version":3,"file":"static/js/803.c4bf2f67.chunk.js","mappings":"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","sources":["components/Typography/Subtitle.js","components/Cards/TitleCard.js","components/Map.jsx","features/leads/DataIndustri/DataIndustri.jsx","pages/protected/Data-User/Data-Industri.js","../node_modules/@heroicons/react/24/outline/PencilIcon.js","../node_modules/@heroicons/react/24/outline/TrashIcon.js"],"sourcesContent":[" function Subtitle({styleClass, children}){\n    return(\n        <div className={`text-xl font-semibold ${styleClass}`}>{children}</div>\n    )\n}\n\nexport default Subtitle","import Subtitle from \"../Typography/Subtitle\"\n\n  \n  function TitleCard({title, children, topMargin, TopSideButtons}){\n      return(\n          <div className={\"card w-full p-6 bg-base-100 shadow-xl \" + (topMargin || \"mt-6\")}>\n\n            {/* Title for Card */}\n              <Subtitle styleClass={TopSideButtons ? \"inline-block\" : \"\"}>\n                {title}\n\n                {/* Top side button, show only if present */}\n                {\n                    TopSideButtons && <div className=\"inline-block float-right\">{TopSideButtons}</div>\n                }\n              </Subtitle>\n              \n              <div className=\"divider mt-2\"></div>\n          \n              {/** Card Body */}\n              <div className='h-full w-full pb-6 bg-base-100'>\n                  {children}\n              </div>\n          </div>\n          \n      )\n  }\n  \n  \n  export default TitleCard","import React, { useState, useEffect } from \"react\";\r\nimport { MapContainer, TileLayer, Marker, useMapEvents, useMap } from \"react-leaflet\";\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport L from \"leaflet\";\r\nimport { GeoSearchControl, OpenStreetMapProvider } from 'leaflet-geosearch';\r\nimport \"leaflet-geosearch/dist/geosearch.css\";\r\n\r\n// Custom icon for the marker\r\nconst icon = new L.Icon({\r\n  iconUrl: \"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon.png\",\r\n  iconSize: [25, 41],\r\n  iconAnchor: [12, 41],\r\n});\r\n\r\nconst LocationMarker = ({ setLatLng }) => {\r\n  const [position, setPosition] = useState(null);\r\n\r\n  useMapEvents({\r\n    click(e) {\r\n      setPosition(e.latlng);\r\n      setLatLng(e.latlng); // Update parent component with latlng\r\n    },\r\n  });\r\n\r\n  return position === null ? null : (\r\n    <Marker position={position} icon={icon}></Marker>\r\n  );\r\n};\r\n\r\nconst SearchControl = ({ provider, setLatLng }) => {\r\n  const map = useMap();\r\n\r\n  useEffect(() => {\r\n    const searchControl = new GeoSearchControl({\r\n      provider: provider,\r\n      style: 'bar',\r\n      autoClose: true,\r\n      retainZoomLevel: false,\r\n      searchLabel: 'Enter address or place',\r\n      keepResult: true,\r\n    });\r\n\r\n    map.addControl(searchControl);\r\n\r\n    map.on('geosearch/showlocation', function (result) {\r\n      const { x, y } = result.location;\r\n      setLatLng({ lat: y, lng: x });\r\n    });\r\n\r\n    // Cleanup function to remove the control on unmount\r\n    return () => map.removeControl(searchControl);\r\n  }, [map, provider, setLatLng]);\r\n\r\n  return null;\r\n};\r\n\r\nconst Map = ({ setLatLng }) => {\r\n  const provider = new OpenStreetMapProvider();\r\n\r\n  return (\r\n    <MapContainer\r\n      center={[-2.5, 118.0]} // Center on Indonesia\r\n      zoom={5} // Default zoom level\r\n      style={{ height: \"300px\", width: \"100%\" }}\r\n    >\r\n      <TileLayer\r\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n        attribution='&copy; OpenStreetMap contributors'\r\n      />\r\n      <SearchControl provider={provider} setLatLng={setLatLng} />\r\n      <LocationMarker setLatLng={setLatLng} />\r\n    </MapContainer>\r\n  );\r\n};\r\n\r\nexport default Map;\r\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport TitleCard from \"../../../components/Cards/TitleCard\";\nimport Api from \"../../../api\";\nimport TrashIcon from '@heroicons/react/24/outline/TrashIcon';\nimport PencilIcon from '@heroicons/react/24/outline/PencilIcon';\n\nimport Cookies from \"js-cookie\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport swal from \"sweetalert2\";\nimport Map from \"../../../components/Map\";\n\nconst Leads = () => {\n    const { leads, loading, error } = useSelector((state) => state.lead);\n    const dispatch = useDispatch();\n    const [searchTerm, setSearchTerm] = useState(\"\");\n    const [currentPage, setCurrentPage] = useState(1);\n    const [selectedLead, setSelectedLead] = useState(null);\n    const [isDetailModalOpen, setIsDetailModalOpen] = useState(false);\n    const [isAddLeadModalOpen, setIsAddLeadModalOpen] = useState(false);\n    const itemsPerPage = 8;\n    const [siswa, setSiswa] = useState([]);\n    const [pagination, setPagination] = useState({\n        currentPage: 1,\n        perPage: 10,\n        total: 0\n    });\n    const [userId, setUserId] = useState(\"\");\n    const [name, setName] = useState(\"\");\n    const [bidang, setBidang] = useState(\"\");\n    const [alamat, setAlamat] = useState(\"\");\n    const [longitude, setLongitude] = useState(\"\");\n    const [latitude, setLatitude] = useState(\"\");\n    const [industryMentorName, setIndustryMentorName] = useState(\"\");\n    const [industryMentorNo, setIndustryMentorNo] = useState(\"\");\n    const token = Cookies.get(\"token\");\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        try {\n            const response = await Api.post(`admin/industri`, {\n                user_id: userId,\n                name,\n                bidang,\n                alamat,\n                longitude,\n                latitude,\n                industryMentorName,\n                industryMentorNo,\n            }, {\n                headers: {\n                    Authorization: `Bearer ${token}`,\n                }\n            });\n            toast.success(response.data.message, {\n                position: \"top-right\",\n                duration: 4000,\n            });\n        } catch (error) {\n            if (error.response && error.response.status === 422) {\n                const errors = error.response.data.errors;\n                for (const field in errors) {\n                    toast.error(`${field}: ${errors[field].join(', ')}`, {\n                        position: \"top-right\",\n                        duration: 4000,\n                    });\n                }\n            } else {\n                console.error(\"Error adding lead:\", error);\n                toast.error(\"Failed to add lead.\", {\n                    position: \"top-right\",\n                    duration: 4000,\n                });\n            }\n        }\n    };\n\n    const fetchData = async (pageNumber = 1) => {\n        try {\n            const response = await Api.get(`admin/industri`, {\n                headers: {\n                    Authorization: `Bearer ${token}`,\n                }\n            });\n            setSiswa(response.data.data);\n            console.log(response.data.data);\n            setPagination({\n                currentPage: response.data.current_page,\n                perPage: response.data.per_page,\n                total: response.data.total\n            });\n        } catch (error) {\n            console.error(\"Error fetching data:\", error);\n        }\n    };\n\n    useEffect(() => {\n        fetchData();\n    }, []);\n\n    const handleDelete = async (leadId) => {\n        try {\n            const { isConfirmed } = await swal.fire({\n                title: \"Yakin?\",\n                text: \"Apakah Anda yakin ingin menghapus data ini?\",\n                icon: \"warning\",\n                showCancelButton: true,\n                confirmButtonColor: \"#3085d6\",\n                cancelButtonColor: \"#d33\",\n                confirmButtonText: \"Hapus!\",\n            });\n    \n            if (isConfirmed) {\n                const response = await Api.delete(`admin/industri/${leadId}`, {\n                    headers: {\n                        Authorization: `Bearer ${token}`,\n                    }\n                });\n                toast.success(response.data.message, {\n                    position: \"top-right\",\n                    duration: 4000,\n                });\n                fetchData();  // Re-fetch data after deletion\n            }\n        } catch (error) {\n            console.error(\"Error deleting lead:\", error);\n            toast.error(\"Failed to delete lead.\", {\n                position: \"top-right\",\n                duration: 4000,\n            });\n        }\n    };\n    \n    const handleSearchChange = (e) => {\n        setSearchTerm(e.target.value);\n    };\n\n    const filteredLeads = siswa.filter((lead) =>\n        lead.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        lead.email.toLowerCase().includes(searchTerm.toLowerCase())\n    );\n\n    const totalPages = Math.ceil(filteredLeads.length / itemsPerPage);\n\n    const handleClick = (pageNumber) => {\n        setCurrentPage(pageNumber);\n    };\n\n    const renderPagination = () => {\n        let pages = [];\n        for (let i = 1; i <= totalPages; i++) {\n            pages.push(\n                <button\n                    key={i}\n                    className={`btn btn-sm ${i === currentPage ? \"btn-active\" : \"\"}`}\n                    onClick={() => handleClick(i)}\n                >\n                    {i}\n                </button>\n            );\n        }\n        return pages;\n    };\n\n    const startIndex = (currentPage - 1) * itemsPerPage;\n    const endIndex = startIndex + itemsPerPage;\n    const currentItems = filteredLeads.slice(startIndex, endIndex);\n\n    if (loading) return <div>Loading...</div>;\n    if (error) return <div>Error: {error}</div>;\n\n    return (\n        <>\n            <TitleCard title=\"Data Industri\" topMargin=\"mt-2\" TopSideButtons={\n                <div className=\"flex flex-col sm:flex-row sm:justify-between items-center gap-2\">\n                    <input\n                        type=\"text\"\n                        className=\"input input-bordered input-sm w-full sm:w-64\"\n                        placeholder=\"Search\"\n                        value={searchTerm}\n                        onChange={handleSearchChange}\n                    />\n                    <Link to={\"/app/data/industri/tambah\"}>\n                    <button\n                        className=\"btn btn-sm normal-case btn-primary w-full sm:w-auto\"\n                       \n                    >\n                        Add New\n                    </button>\n                    </Link>\n                   \n                </div>\n            }>\n                <div className=\"overflow-x-auto w-full\">\n                    <table className=\"table w-[150%] md:w-full text-center\">\n                        <thead>\n                            <tr>\n                                <th>Nama</th>\n                                <th>Bidang</th>\n                                <th>Alamat</th>\n                                <th>Pembimbing</th>\n                                <th className=\"text-center col-6\">No Pembimbing</th>\n                                <th className=\"text-center col-6\">Action</th>\n                            </tr>\n                        </thead>\n                        <tbody className=\"text-center\">\n                            {currentItems.map((lead) => (\n                                <tr key={lead.id}>\n                                    <td>\n                                        <div className=\"font-bold\">{lead.name}</div>\n                                    </td>\n                                    <td>{lead.bidang}</td>\n                                    <td>{lead.alamat}</td>\n                                    <td>{lead.industryMentorName}</td>\n                                    <td>{lead.industryMentorNo}</td>\n                                    <td className=\"\">\n                                        <Link to={`/app/data/industri/edit/${lead.id}`}>\n                                            <button className=\"btn btn-square btn-ghost\">\n                                                <PencilIcon className=\"w-5\" />\n                                            </button>\n                                        </Link>\n                                        <button className=\"btn btn-square btn-ghost\" onClick={() => handleDelete(lead.id)}>\n                                            <TrashIcon className=\"w-5\" />\n                                        </button>\n                                    </td>\n                                </tr>\n                            ))}\n                        </tbody>\n                    </table>\n                </div>\n                <div className=\"flex justify-center mt-4 gap-2\">\n                    {renderPagination()}\n                </div>\n            </TitleCard>\n\n           \n            <ToastContainer />\n\n\n        </>\n    );\n};\n\nexport default Leads;\n","import { useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { setPageTitle } from '../../../features/common/headerSlice'\nimport Data from '../../../features/leads/DataIndustri/DataIndustri'\n\nfunction InternalPage(){\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        dispatch(setPageTitle({ title : \"Data Industri\"}))\n      }, [])\n\n\n    return(\n        <Data />\n    )\n}\n\nexport default InternalPage","const React = require(\"react\");\n\nfunction PencilIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M16.862 4.487l1.687-1.688a1.875 1.875 0 112.652 2.652L6.832 19.82a4.5 4.5 0 01-1.897 1.13l-2.685.8.8-2.685a4.5 4.5 0 011.13-1.897L16.863 4.487zm0 0L19.5 7.125\"\n  }));\n}\n\nconst ForwardRef = React.forwardRef(PencilIcon);\nmodule.exports = ForwardRef;","const React = require(\"react\");\n\nfunction TrashIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M14.74 9l-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 01-2.244 2.077H8.084a2.25 2.25 0 01-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 00-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 013.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 00-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 00-7.5 0\"\n  }));\n}\n\nconst ForwardRef = React.forwardRef(TrashIcon);\nmodule.exports = ForwardRef;"],"names":["styleClass","children","className","title","topMargin","TopSideButtons","icon","L","iconUrl","iconSize","iconAnchor","LocationMarker","setLatLng","useState","position","setPosition","useMapEvents","click","e","latlng","SearchControl","provider","map","useMap","useEffect","searchControl","GeoSearchControl","style","autoClose","retainZoomLevel","searchLabel","keepResult","addControl","on","result","location","x","y","lat","lng","removeControl","OpenStreetMapProvider","center","zoom","height","width","url","attribution","useSelector","state","lead","loading","leads","error","useDispatch","searchTerm","setSearchTerm","currentPage","setCurrentPage","siswa","setSiswa","perPage","total","setPagination","token","Cookies","fetchData","Api","headers","Authorization","response","data","console","log","current_page","per_page","handleDelete","leadId","swal","text","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","isConfirmed","toast","message","duration","filteredLeads","filter","name","toLowerCase","includes","email","totalPages","Math","ceil","length","startIndex","endIndex","currentItems","slice","TitleCard","type","placeholder","value","onChange","target","to","bidang","alamat","industryMentorName","industryMentorNo","id","onClick","pages","i","push","renderPagination","dispatch","setPageTitle","React","require","ForwardRef","forwardRef","svgRef","titleId","props","createElement","Object","assign","xmlns","fill","viewBox","strokeWidth","stroke","ref","strokeLinecap","strokeLinejoin","d","module","exports"],"sourceRoot":""}