{"version":3,"file":"static/js/369.b2f63e65.chunk.js","mappings":"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","sources":["features/leads/DataGuru/EditGuru.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport Api from \"../../../api\";\nimport Cookies from \"js-cookie\";\nimport { toast } from \"react-hot-toast\";\n\nconst token = Cookies.get(\"token\");\n\nconst EditStudentPage = () => {\n  const navigate = useNavigate();\n  const { id } = useParams(); // Extract the student ID from URL params\n\n  const [jurusan, setJurusan] = useState([]);\n  const [formData, setFormData] = useState({\n    username: \"\",\n    name: \"\",\n    user_id: \"\",\n    no_hp: \"\",\n    departemen_id: \"\",\n    roles: \"guru\",\n  });\n\n  const fetchTeacherData = async () => {\n    try {\n      const response = await Api.get(`admin/users/${id}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const teacher = response.data.data.teacher;\n      const username = response.data.data.name;\n      setFormData({\n        username: username || \"\",\n        name: teacher.name || \"\",\n        user_id: teacher.user_id || \"\",\n        no_hp: teacher.no_hp || \"\",\n        departemen_id: teacher.departemen_id || \"\",\n        roles: \"guru\"\n      });\n    } catch (error) {\n      toast.error(\"Failed to load student data.\", {\n        position: \"top-right\",\n        duration: 4000\n      });\n    }\n  };\n\n  const handleChange = (e) => {\n    const { name, value, type, files } = e.target;\n    setFormData((prevData) => ({\n      ...prevData,\n      [name]: type === \"file\" ? files[0] : value\n    }));\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      await Api.put(`admin/users/${id}`, formData, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      toast.success(\"Lead updated successfully!\", {\n        position: \"top-right\",\n        duration: 4000\n      });\n      navigate(\"/app/data/guru\");\n    } catch (error) {\n      if (error.response) {\n        const errorMessages = error.response.data.errors;\n        console.error(\"Error response data:\", error.response.data);\n        if (errorMessages) {\n          for (const [field, messages] of Object.entries(errorMessages)) {\n          }\n          toast.error(\n            `Failed to update lead: ${Object.values(errorMessages)[0][0]}`,\n            {\n              position: \"top-right\",\n              duration: 4000\n            }\n          );\n        } else {\n          toast.error(\n            `Failed to update lead: ${\n              error.response.data.message || \"Please check the form fields.\"\n            }`,\n            {\n              position: \"top-right\",\n              duration: 4000\n            }\n          );\n        }\n      } else {\n        toast.error(\"Failed to update lead.\", {\n          position: \"top-right\",\n          duration: 4000\n        });\n      }\n    }\n  };\n\n  useEffect(() => {\n    fetchTeacherData();\n  }, [id]);\n\n  useEffect(() => {\n    Api.get(\"admin/departemen\", {\n      headers: { Authorization: `Bearer ${token}` }\n    })\n      .then((response) => {\n        const data = response.data.data.data || []; // Ensure the data is an array\n        setJurusan(Array.isArray(data) ? data : []);\n      })\n      .catch((error) => {});\n  }, []);\n\n  return (\n    <div className=\"container mx-auto my-10 px-4\">\n      <div className=\"bg-white shadow-lg rounded-lg p-6 border-t-4 border-blue-500\">\n        <h1 className=\"text-3xl font-bold text-center mb-4\">Edit Data guru</h1>\n        <p className=\"text-center border-b pb-4 mb-4\">\n          Silakan update form di bawah!\n        </p>\n\n        <form onSubmit={handleSubmit}>\n        <div className=\"mb-4\" >\n            <label className=\"block text-gray-700 font-bold mb-2\">Username</label>\n            <input\n              type=\"text\"\n              name=\"username\"\n              value={formData.username}\n              onChange={handleChange}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:border-blue-500\"\n              required\n            />\n          </div>\n          <div className=\"mb-4\">\n            <label className=\"block text-gray-700 font-bold mb-2\">Nama</label>\n            <input\n              type=\"text\"\n              name=\"name\"\n              value={formData.name}\n              onChange={handleChange}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:border-blue-500\"\n              required\n            />\n          </div>\n         \n\n          <div className=\"mb-4\">\n            <label className=\"block text-gray-700 font-bold mb-2\">\n              No Telephone\n            </label>\n            <input\n              type=\"text\"\n              name=\"no_hp\"\n              value={formData.no_hp}\n              onChange={handleChange}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:border-blue-500\"\n              required\n            />\n          </div>\n\n          <div className=\"mb-4\">\n            <label className=\"block text-gray-700 font-bold mb-2\">\n              Jurusan\n            </label>\n            <select\n              name=\"departemen_id\"\n              value={formData.departemen_id}\n              onChange={handleChange}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:border-blue-500\"\n              required\n            >\n              <option value=\"\">Pilih Jurusan</option>\n              {jurusan.map((jurusan) => (\n                <option key={jurusan.id} value={jurusan.id}>\n                  {jurusan.name}\n                </option>\n              ))}\n            </select>\n          </div>\n\n          <div className=\"flex justify-between gap-2\">\n            <button\n              type=\"submit\"\n              className=\"w-full px-4 py-2 text-white bg-blue-500 hover:bg-blue-700 rounded-lg\"\n            >\n              Save\n            </button>\n            <button\n              type=\"button\"\n              className=\"w-full px-4 py-2 border border-gray-300 text-gray-700 rounded-lg\"\n              onClick={() => navigate(\"/app/data/guru\")}\n            >\n              Cancel\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default EditStudentPage;\n"],"names":["token","Cookies","get","EditStudentPage","navigate","useNavigate","id","useParams","jurusan","setJurusan","useState","formData","setFormData","username","name","user_id","no_hp","departemen_id","roles","handleChange","e","value","type","files","target","prevData","useEffect","async","response","Api","headers","Authorization","teacher","data","error","toast","position","duration","fetchTeacherData","then","Array","isArray","catch","_jsx","className","children","_jsxs","onSubmit","preventDefault","put","success","errorMessages","errors","console","field","messages","Object","entries","values","message","onChange","required","map","onClick"],"sourceRoot":""}