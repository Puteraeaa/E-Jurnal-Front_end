{"version":3,"file":"static/js/378.9816f0b0.chunk.js","mappings":"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","sources":["components/CalendarView/index.js","features/calendar/index.jsx","pages/protected/Calendar.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport ChevronLeftIcon from \"@heroicons/react/24/solid/ChevronLeftIcon\";\nimport ChevronRightIcon from \"@heroicons/react/24/solid/ChevronRightIcon\";\nimport moment from \"moment\";\nimport { CALENDAR_EVENT_STYLE } from \"./util\";\nimport hasAnyPermission from \"../../utils/Permissions\";\n\nconst THEME_BG = CALENDAR_EVENT_STYLE;\n\nfunction CalendarView({ calendarEvents, addNewEvent, openDayDetail, onDateClick, onEventClick }) {\n    const today = moment().startOf('day');\n    const weekdays = [\"sun\", \"mon\", \"tue\", \"wed\", \"thu\", \"fri\", \"sat\"];\n    const colStartClasses = [\n        \"\",\n        \"col-start-2\",\n        \"col-start-3\",\n        \"col-start-4\",\n        \"col-start-5\",\n        \"col-start-6\",\n        \"col-start-7\",\n    ];\n\n    const [firstDayOfMonth, setFirstDayOfMonth] = useState(moment().startOf('month'));\n    const [events, setEvents] = useState([]);\n    const [currMonth, setCurrMonth] = useState(() => moment(today).format(\"MMM-yyyy\"));\n\n    useEffect(() => {\n        setEvents(calendarEvents);\n    }, [calendarEvents]);\n\n    const allDaysInMonth = () => {\n        let start = moment(firstDayOfMonth).startOf('week');\n        let end = moment(moment(firstDayOfMonth).endOf('month')).endOf('week');\n        let days = [];\n        let day = start;\n        while (day <= end) {\n            days.push(day.toDate());\n            day = day.clone().add(1, 'd');\n        }\n        return days;\n    };\n\n    const getEventsForCurrentDate = (date) => {\n        let filteredEvents = events.filter(e => moment(date).isSame(moment(e.start), 'day'));\n        if (filteredEvents.length > 2) {\n            let originalLength = filteredEvents.length;\n            filteredEvents = filteredEvents.slice(0, 2);\n            filteredEvents.push({ title: `${originalLength - 2} more`, theme: \"MORE\" });\n        }\n        return filteredEvents;\n    };\n\n    const openAllEventsDetail = (date, theme) => {\n        if (theme !== \"MORE\") return;\n        let filteredEvents = events.filter(e => moment(date).isSame(moment(e.start), 'day'));\n        openDayDetail({ filteredEvents, title: moment(date).format(\"D MMM YYYY\") });\n        onDateClick({ filteredEvents, title: moment(date).format(\"D MMM YYYY\") });\n    };\n\n    const showEventDetails = (event) => {\n        onEventClick(event);\n    };\n\n    const isToday = (date) => {\n        return moment(date).isSame(moment(), 'day');\n    };\n\n    const isDifferentMonth = (date) => {\n        return moment(date).month() !== moment(firstDayOfMonth).month();\n    };\n\n    const getPrevMonth = () => {\n        const firstDayOfPrevMonth = moment(firstDayOfMonth).add(-1, 'M').startOf('month');\n        setFirstDayOfMonth(firstDayOfPrevMonth);\n        setCurrMonth(moment(firstDayOfPrevMonth).format(\"MMM-yyyy\"));\n    };\n\n    const getCurrentMonth = () => {\n        const firstDayOfCurrMonth = moment().startOf('month');\n        setFirstDayOfMonth(firstDayOfCurrMonth);\n        setCurrMonth(moment(firstDayOfCurrMonth).format(\"MMM-yyyy\"));\n    };\n\n    const getNextMonth = () => {\n        const firstDayOfNextMonth = moment(firstDayOfMonth).add(1, 'M').startOf('month');\n        setFirstDayOfMonth(firstDayOfNextMonth);\n        setCurrMonth(moment(firstDayOfNextMonth).format(\"MMM-yyyy\"));\n    };\n\n    return (\n        <>\n            <div className=\"w-[150%] md:w-full bg-base-100 p-4 rounded-lg\">\n                <div className=\"flex items-center justify-between\">\n                    <div className=\"flex justify-normal gap-2 sm:gap-4\">\n                        <p className=\"font-semibold text-xl w-48\">\n                            {moment(firstDayOfMonth).format(\"MMMM yyyy\")}\n                        </p>\n                        <button className=\"btn btn-square btn-sm btn-ghost md:ml-[-30px]\" onClick={getPrevMonth}>\n                            <ChevronLeftIcon className=\"w-5 h-5\" />\n                        </button>\n                        <button className=\"btn btn-sm btn-ghost normal-case\" onClick={getCurrentMonth}>\n                            Bulan Ini\n                        </button>\n                        <button className=\"btn btn-square btn-sm btn-ghost\" onClick={getNextMonth}>\n                            <ChevronRightIcon className=\"w-5 h-5\" />\n                        </button>\n                    </div>\n                    <div>\n                    {hasAnyPermission([\"siswa.delete\", \"guru.index\", \"orang-tua.index\"]) && (\n                        <button className=\"btn btn-sm w-15 btn-ghost btn-outline normal-case text-xs\" onClick={addNewEvent}>\n                            Tambah Jadwal\n                        </button>\n                    )}\n                    </div>\n                </div>\n                <div className=\"my-4 divider\" />\n                <div className=\"grid grid-cols-7 gap-6 sm:gap-12 place-items-center\">\n                    {weekdays.map((day, key) => (\n                        <div className=\"text-xs capitalize\" key={key}>\n                            {day}\n                        </div>\n                    ))}\n                </div>\n\n                <div className=\"grid grid-cols-7 mt-1 place-items-center\">\n                    {allDaysInMonth().map((day, idx) => (\n                        <div key={idx} className={colStartClasses[moment(day).day()] + \" border border-solid w-full h-28\"}>\n                            <p\n                                className={`inline-block flex items-center justify-center h-10 w-8 md:h-10 md:w-10 rounded-full mx-1 mt-1 text-sm cursor-pointer hover:bg-base-300 ${isToday(day) && \"bg-blue-100 dark:bg-blue-400 dark:hover:bg-base-300 dark:text-white\"} ${isDifferentMonth(day) && \"text-slate-400 dark:text-slate-600\"}`}\n                                onClick={() => onDateClick(day)} // Pass the date to onDateClick\n                            >\n                                {moment(day).format(\"D\")}\n                            </p>\n                            {\n                                getEventsForCurrentDate(day).map((e, k) => (\n                                    <p\n                                        key={k}\n                                        onClick={() => e.theme === \"MORE\" ? openAllEventsDetail(day, e.theme) : showEventDetails(e)}\n                                        className={`text-xs px-2 mt-1 truncate ${THEME_BG[e.theme] || \"\"}`}\n                                    >\n                                        {e.title}\n                                    </p>\n                                ))\n                            }\n                        </div>\n                    ))}\n                </div>\n            </div>\n\n            {/* Event Details Modal */}\n        </>\n    );\n}\n\nexport default CalendarView;\n","import { useEffect, useState } from \"react\";\nimport CalendarView from \"../../components/CalendarView\";\nimport moment from \"moment\";\nimport { useDispatch } from \"react-redux\";\nimport { openRightDrawer } from \"../common/rightDrawerSlice\";\nimport { RIGHT_DRAWER_TYPES } from \"../../utils/globalConstantUtil\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport Select from \"react-select\";\nimport swal from \"sweetalert2\";\nimport Api from \"../../api\";\nimport Cookies from \"js-cookie\";\nimport momentTZ from \"moment-timezone\";\n\nconst INITIAL_EVENTS = []; // Initialize as empty or with some default data if needed\n\nfunction Calendar() {\n  const dispatch = useDispatch();\n  const [events, setEvents] = useState(INITIAL_EVENTS);\n  const [selectedCompany, setSelectedCompany] = useState(null);\n  const [modalInfo, setModalInfo] = useState(null);\n  const [industri, setIndustri] = useState([]); // Ensure it's initialized as an empty array\n  const token = Cookies.get(\"token\");\n  const user = JSON.parse(Cookies.get(\"user\"));\n\n  // Properly create companyOptions\n  const companyOptions = industri.map((company) => ({\n    value: company.id,\n    label: company.name\n  }));\n\n  const fetchEvents = async () => {\n    try {\n      const response = await Api.get(\"/admin/jadwal\", {\n        headers: { Authorization: `Bearer ${token}` }\n      });\n\n      const data = response.data.data;\n      const formattedEvents = Object.keys(data).flatMap((date) => {\n        const groupDateMoment = momentTZ(date).tz(\"Asia/Jakarta\");\n\n        return data[date].map((event) => {\n          const startDate = groupDateMoment.startOf(\"day\").format(\"YYYY-MM-DD\");\n          const endDate = groupDateMoment.endOf(\"day\").format(\"YYYY-MM-DD\");\n\n          return {\n            title: `${event.status} PKL ke ${event.industri_name}`,\n            start: startDate,\n            end: endDate,\n            company: event.user_name,\n            theme: event.status === \"kunjungan\" ? \"BLUE\" : \"GREEN\",\n            industri_name: event.industri_name\n          };\n        });\n      });\n\n      setEvents(formattedEvents);\n    } catch (error) {}\n  };\n\n  const fetchData = async () => {\n    try {\n      const response = await Api.get(\"admin/industri\", {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setIndustri(response.data.data.data);\n    } catch (error) {}\n  };\n\n  useEffect(() => {\n    fetchEvents();\n    fetchData();\n  }, []);\n\n  const addNewEvent = () => {\n    const modal = document.getElementById(\"my_modal_1\");\n    if (modal) {\n      modal.showModal();\n    }\n  };\n\n  const fixEvent = async () => {\n    const eventDate = document.getElementById(\"eventDate\").value;\n    const eventType = document.getElementById(\"eventType\").value;\n\n    if (eventDate && eventType && selectedCompany) {\n      const modal = document.getElementById(\"my_modal_1\");\n      if (modal) {\n        modal.close();\n      }\n\n      const result = await swal.fire({\n        title: \"Absen\",\n        text: \"Apakah Anda yakin ingin menambahkan jadwal?\",\n        icon: \"warning\",\n        showCancelButton: true,\n        confirmButtonColor: \"#3085d6\",\n        cancelButtonColor: \"#d33\",\n        confirmButtonText: \"Ya, absen!\"\n      });\n\n      if (result.isConfirmed) {\n        const theme = eventType === \"kunjungan\" ? \"ORANGE\" : \"GREEN\";\n        const eventDateMoment = moment(eventDate).startOf(\"day\");\n        const newEventObj = {\n          status: eventType,\n          date: eventDateMoment.format(\"YYYY-MM-DD\"),\n          user_id: user.id,\n          industri_id: selectedCompany.value\n        };\n\n        try {\n          await Api.post(\"/admin/jadwal\", newEventObj, {\n            headers: {\n              Authorization: `Bearer ${token}`,\n              \"Content-Type\": \"application/json\"\n            }\n          });\n\n          // Create local start and end times for calendar display\n          const localStart = eventDateMoment.format(\"YYYY-MM-DD\");\n          const localEnd = eventDateMoment.endOf(\"day\").format(\"YYYY-MM-DD\");\n\n          setEvents((prevEvents) => [\n            ...prevEvents,\n            {\n              ...newEventObj,\n              start: localStart,\n              end: localEnd,\n              title: `${eventType} ke ${selectedCompany.label}`,\n              theme\n            }\n          ]);\n          toast.success(\"New Event Added!\");\n        } catch (error) {\n          toast.error(\"Error adding event. Please try again.\");\n        }\n      } else {\n        toast.error(\"Please fill in all required fields\");\n      }\n    } else {\n      toast.error(\"Please fill in all required fields\");\n    }\n  };\n\n  const onDateClick = (date) => {\n    const filteredEvents = events.filter((event) =>\n      moment(date).isSame(moment(event.start), \"day\")\n    );\n\n    const title = moment(date).format(\"D MMM YYYY\");\n\n    openDayDetail({ filteredEvents, title });\n  };\n\n  const openDayDetail = ({ filteredEvents, title }) => {\n    dispatch(\n      openRightDrawer({\n        header: title,\n        bodyType: RIGHT_DRAWER_TYPES.CALENDAR_EVENTS,\n        extraObject: { filteredEvents }\n      })\n    );\n  };\n\n  return (\n    <>\n      <CalendarView\n        calendarEvents={events}\n        addNewEvent={addNewEvent}\n        openDayDetail={openDayDetail}\n        onDateClick={onDateClick}\n      />\n\n      <dialog id=\"my_modal_1\" className=\"modal\">\n        <div className=\"modal-box\">\n          <h3 className=\"font-bold text-lg\">Tambah Jadwal</h3>\n          <form id=\"eventForm\" className=\"py-4\">\n            <label className=\"block mb-2\">Tanggal:</label>\n            <input\n              type=\"date\"\n              id=\"eventDate\"\n              className=\"input input-bordered w-full mb-4\"\n              required\n            />\n\n            <label className=\"block mb-2\">Tipe Event:</label>\n            <select\n              id=\"eventType\"\n              className=\"select select-bordered w-full mb-4\"\n              required\n            >\n              <option value=\"kunjungan\">Kunjungan PKL</option>\n              <option value=\"keberangkatan\">Keberangkatan PKL</option>\n            </select>\n\n            <label className=\"block mb-2\">Perusahaan:</label>\n            <Select\n              options={companyOptions}\n              value={selectedCompany}\n              onChange={setSelectedCompany}\n              placeholder=\"Select a company\"\n              className=\"mb-4\"\n              required\n            />\n          </form>\n          <div className=\"modal-action\">\n            <button\n              onClick={fixEvent}\n              type=\"button\"\n              className=\"pl-4 btn btn-success btn-sm hover:btn-primary\"\n            >\n              Tambah\n            </button>\n            <button\n              onClick={() => document.getElementById(\"my_modal_1\").close()}\n              type=\"button\"\n              className=\"ml-4 btn btn-sm btn-error hover:btn-primary\"\n            >\n              Tutup\n            </button>\n          </div>\n        </div>\n      </dialog>\n\n      <ToastContainer />\n    </>\n  );\n}\n\nexport default Calendar;\n","import { useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { setPageTitle } from '../../features/common/headerSlice'\nimport Calendar from '../../features/calendar'\n\nfunction InternalPage(){\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        dispatch(setPageTitle({ title : \"Calendar\"}))\n      }, [])\n\n\n    return(\n        <Calendar />\n    )\n}\n\nexport default InternalPage"],"names":["THEME_BG","CALENDAR_EVENT_STYLE","_ref","calendarEvents","addNewEvent","openDayDetail","onDateClick","onEventClick","today","moment","startOf","colStartClasses","firstDayOfMonth","setFirstDayOfMonth","useState","events","setEvents","currMonth","setCurrMonth","format","useEffect","getEventsForCurrentDate","date","filteredEvents","filter","e","isSame","start","length","originalLength","slice","push","title","theme","isDifferentMonth","month","_jsx","_Fragment","children","_jsxs","className","onClick","getPrevMonth","firstDayOfPrevMonth","add","ChevronLeftIcon","getCurrentMonth","firstDayOfCurrMonth","getNextMonth","firstDayOfNextMonth","ChevronRightIcon","hasAnyPermission","map","day","key","allDaysInMonth","end","endOf","days","toDate","clone","idx","k","openAllEventsDetail","INITIAL_EVENTS","dispatch","useDispatch","selectedCompany","setSelectedCompany","modalInfo","setModalInfo","industri","setIndustri","token","Cookies","get","user","JSON","parse","companyOptions","company","value","id","label","name","async","data","Api","headers","Authorization","formattedEvents","Object","keys","flatMap","groupDateMoment","momentTZ","tz","event","startDate","endDate","status","industri_name","user_name","error","fetchEvents","response","fetchData","openRightDrawer","header","bodyType","RIGHT_DRAWER_TYPES","CALENDAR_EVENTS","extraObject","CalendarView","modal","document","getElementById","showModal","type","required","Select","options","onChange","placeholder","eventDate","eventType","close","swal","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","isConfirmed","eventDateMoment","newEventObj","user_id","industri_id","post","localStart","localEnd","prevEvents","toast","success","ToastContainer","setPageTitle","Calendar"],"sourceRoot":""}