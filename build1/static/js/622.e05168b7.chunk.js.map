{"version":3,"file":"static/js/622.e05168b7.chunk.js","mappings":"8NAQA,MAsJA,EAtJuBA,KACrB,MAAOC,EAAcC,IAAmBC,EAAAA,EAAAA,UAAS,OAC1CC,EAAUC,IAAeF,EAAAA,EAAAA,UAAS,KAClCG,EAAeC,IAAoBJ,EAAAA,EAAAA,WAAS,IAC5CK,EAAQC,IAAaN,EAAAA,EAAAA,UAAS,IAC/BO,EAAQC,EAAAA,EAAQC,IAAI,SAEpBC,EAAWC,UACf,IAEE,MAMMC,SAN0BC,EAAAA,EAAIJ,IAAI,iBAAkB,CACxDK,QAAS,CACPC,cAAe,UAAUR,QAIQS,KAAKA,KAAKC,UAUzCC,SAPiBL,EAAAA,EAAIJ,IAAI,uBAAuBG,IAAc,CAClEE,QAAS,CACPC,cAAe,UAAUR,QAKGS,KAAKA,KAAKA,KAAK,GAC/CV,EAAUY,EAAeC,SAEzBC,QAAQC,IAAI,kBAAmBH,EAAeC,QAEhD,CAAE,MAAOG,GACPF,QAAQE,MAAM,sBAAuBA,EAAMC,SAC3CC,EAAAA,GAAMF,MAAM,sBAAuB,CAAEG,SAAU,YAAaC,SAAU,KACxE,IAGFC,EAAAA,EAAAA,YAAU,KACRjB,GAAU,GACT,IAEH,MAsCMkB,EAAuBA,KAC3BxB,GAAkBD,EAAc,EAGlC,OACE0B,EAAAA,EAAAA,MAAA,OAAKC,UAAU,8CAA6CC,SAAA,EAE1DC,EAAAA,EAAAA,KAACC,EAAAA,GAAc,KAGfD,EAAAA,EAAAA,KAAA,OAAKF,UAAU,yBAAwBC,SACpC1B,GACC2B,EAAAA,EAAAA,KAAA,UACEE,IAAK,GAAG7B,IACR8B,MAAM,cACNL,UAAU,gBACVM,MAAO,CAAEC,OAAQ,OAAQC,OAAQ,QACjCC,cAAgBC,GAAMA,EAAEC,oBAG1BT,EAAAA,EAAAA,KAAA,KAAGF,UAAU,4BAA2BC,SAAC,sBAK5CW,EAAAA,EAAAA,GAAiB,CAAC,mBACjBV,EAAAA,EAAAA,KAAA,UACEW,QAASf,EACTE,UAAU,qHAAoHC,SAC/H,gBAMF5B,IACC6B,EAAAA,EAAAA,KAAA,OAAKF,UAAU,wEAAuEC,UACpFF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oCAAmCC,SAAA,EAChDC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,6BAA4BC,SAAC,0BAC3CC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,OAAMC,UACnBC,EAAAA,EAAAA,KAAA,SACEY,KAAK,OACLC,SAhFYC,IACxB,MAAMC,EAAOD,EAAME,OAAOC,MAAM,GAChClD,EAAgBgD,GAChB7C,EAAY6C,EAAOA,EAAKG,KAAO,GAAG,EA8EtBpB,UAAU,mLAGb7B,IACC4B,EAAAA,EAAAA,MAAA,OAAKC,UAAU,uEAAsEC,SAAA,EACnFC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,sBAAqBC,SAAC,oBACnCC,EAAAA,EAAAA,KAAA,KAAAD,SAAI9B,QAGR+B,EAAAA,EAAAA,KAAA,UACEW,QArFShC,UACnB,GAAIb,EAAc,CAChB,MAAMqD,EAAW,IAAIC,SACrBD,EAASE,OAAO,UAAWvD,GAC3BqD,EAASE,OAAO,UAAW,GAE3B,UACyBxC,EAAAA,EAAIyC,KAAK,iBAAkBH,EAAU,CAC1DrC,QAAS,CACPC,cAAe,UAAUR,IACzB,eAAgB,yBAIpBL,EAAY,IACZH,EAAgB,MAChB6B,IACAJ,EAAAA,GAAM+B,QAAQ,8BAA+B,CAC3C9B,SAAU,YACVC,SAAU,MAEZhB,GACF,CAAE,MAAOY,GACPF,QAAQE,MAAM,wBAAyBA,EAAMkC,UAC7ChC,EAAAA,GAAMF,MAAM,wBAAyB,CAAEG,SAAU,YAAaC,SAAU,KAC1E,CACF,MACEN,QAAQC,IAAI,oBACZG,EAAAA,GAAMF,MAAM,oBAAqB,CAAEG,SAAU,YAAaC,SAAU,KACtE,EAyDUI,UAAU,oIAAmIC,SAC9I,YAGDC,EAAAA,EAAAA,KAAA,UACEW,QAASf,EACTE,UAAU,uHAAsHC,SACjI,iBAMH,ECxIV,QAbA,WAEI,MAAM0B,GAAWC,EAAAA,EAAAA,MAMjB,OAJA/B,EAAAA,EAAAA,YAAU,KACN8B,GAASE,EAAAA,EAAAA,IAAa,CAAExB,MAAQ,gBAAgB,GAC/C,KAGDH,EAAAA,EAAAA,KAAC4B,EAAW,GAEpB,C","sources":["features/PanduanPKL/index.jsx","pages/protected/Integration.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios'; // Import axios for API requests\nimport Cookies from 'js-cookie';\nimport Api from '../../api';\nimport hasAnyPermission from '../../utils/Permissions';\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nconst InfoPanduanPKL = () => {\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [fileName, setFileName] = useState('');\n  const [isFormVisible, setIsFormVisible] = useState(false);\n  const [pdfUrl, setPdfUrl] = useState('');\n  const token = Cookies.get(\"token\"); // Get token from cookies\n\n  const fetchPdf = async () => {\n    try {\n      // First, fetch the first page to get the total number of pages\n      const firstPageResponse = await Api.get('/admin/panduan', {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n  \n      const totalPages = firstPageResponse.data.data.last_page;\n  \n      // Now fetch the last page\n      const response = await Api.get(`/admin/panduan?page=${totalPages}`, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n  \n      // Assuming each page contains only one document\n      const latestDocument = response.data.data.data[0];\n      setPdfUrl(latestDocument.dokumen);\n  \n      console.log(\"Latest PDF URL:\", latestDocument.dokumen);\n  \n    } catch (error) {\n      console.error(\"Error fetching PDF:\", error.message);\n      toast.error(\"Error fetching PDF.\", { position: \"top-right\", duration: 4000 });\n    }\n  };\n  \n  useEffect(() => {\n    fetchPdf();\n  }, []);\n  \n  const handleFileChange = (event) => {\n    const file = event.target.files[0];\n    setSelectedFile(file);\n    setFileName(file ? file.name : '');\n  };\n\n  const handleUpload = async () => {\n    if (selectedFile) {\n      const formData = new FormData();\n      formData.append('dokumen', selectedFile);\n      formData.append('user_id', 1);\n\n      try {\n        const response = await Api.post('/admin/panduan', formData, {\n          headers: {\n            Authorization: `Bearer ${token}`,\n            'Content-Type': 'multipart/form-data',\n          },\n        });\n       \n        setFileName(''); // Clear the file name after successful upload\n        setSelectedFile(null); // Clear the selected file\n        toggleFormVisibility(); // Hide the form\n        toast.success(\"File uploaded successfully!\", {\n          position: \"top-right\",\n          duration: 4000,\n        });\n        fetchPdf(); // Refetch the PDF to get the updated file\n      } catch (error) {\n        console.error(\"Error uploading file:\", error.response);\n        toast.error(\"Error uploading file.\", { position: \"top-right\", duration: 4000 });\n      }\n    } else {\n      console.log(\"No file selected\");\n      toast.error(\"No file selected.\", { position: \"top-right\", duration: 4000 });\n    }\n  };\n\n  const toggleFormVisibility = () => {\n    setIsFormVisible(!isFormVisible);\n  };\n\n  return (\n    <div className=\"relative h-screen flex flex-col bg-gray-100\">\n      {/* Tambahkan ToastContainer di luar komponen dinamis */}\n      <ToastContainer />\n\n      {/* Responsive PDF iframe container */}\n      <div className=\"flex-grow relative p-4\">\n        {pdfUrl ? (\n          <iframe\n            src={`${pdfUrl}`}\n            title=\"Panduan PKL\"\n            className=\"w-full h-full\"\n            style={{ border: 'none', height: '90vh' }}\n            onContextMenu={(e) => e.preventDefault()} // Disable right-click\n          />\n        ) : (\n          <p className=\"text-center text-gray-500\">Loading PDF...</p>\n        )}\n      </div>\n\n      {/* Floating Upload Button */}\n      {hasAnyPermission([\"siswa.delete\"]) && (\n        <button\n          onClick={toggleFormVisibility}\n          className=\"fixed bottom-4 right-4 bg-blue-600 text-white p-3 rounded-full shadow-lg hover:bg-blue-700 transition duration-300\"\n        >\n          Upload File\n        </button>\n      )}\n\n      {/* Conditional Upload Form */}\n      {isFormVisible && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex justify-center items-center\">\n          <div className=\"bg-white p-6 rounded-lg shadow-lg\">\n            <h2 className=\"text-xl font-semibold mb-4\">Upload File Panduan:</h2>\n            <div className=\"mb-4\">\n              <input\n                type=\"file\"\n                onChange={handleFileChange}\n                className=\"block w-full text-sm text-gray-500 file:mr-4 file:py-2 file:px-4 file:rounded-lg file:border file:border-gray-300 file:bg-gray-100 file:text-gray-700 hover:file:bg-gray-200\"\n              />\n            </div>\n            {fileName && (\n              <div className=\"mb-4 p-4 bg-gray-100 border border-gray-300 rounded-lg text-gray-700\">\n                <p className=\"text-lg font-medium\">File Selected:</p>\n                <p>{fileName}</p>\n              </div>\n            )}\n            <button\n              onClick={handleUpload}\n              className=\"bg-blue-500 w-[100px] text-white px-6 py-3 rounded-lg shadow-lg hover:bg-blue-600 transition duration-300 mr-4 ml-[300px] text-lg\"\n            >\n              Upload\n            </button>\n            <button\n              onClick={toggleFormVisibility}\n              className=\"mt-2 bg-red-500 text-white px-6 py-3 rounded-lg shadow-lg hover:bg-red-600 transition duration-300 w-[100px] text-lg\"\n            >\n              Close\n            </button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default InfoPanduanPKL;\n","import { useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { setPageTitle } from '../../features/common/headerSlice'\nimport Integration from '../../features/PanduanPKL/index'\n\nfunction InternalPage(){\n\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        dispatch(setPageTitle({ title : \"Panduan PKL\"}))\n      }, [])\n      \n    return(\n        <Integration />\n    )\n}\n\nexport default InternalPage"],"names":["InfoPanduanPKL","selectedFile","setSelectedFile","useState","fileName","setFileName","isFormVisible","setIsFormVisible","pdfUrl","setPdfUrl","token","Cookies","get","fetchPdf","async","totalPages","Api","headers","Authorization","data","last_page","latestDocument","dokumen","console","log","error","message","toast","position","duration","useEffect","toggleFormVisibility","_jsxs","className","children","_jsx","ToastContainer","src","title","style","border","height","onContextMenu","e","preventDefault","hasAnyPermission","onClick","type","onChange","event","file","target","files","name","formData","FormData","append","post","success","response","dispatch","useDispatch","setPageTitle","Integration"],"sourceRoot":""}